CASABLANCA = ../../casablanca
CASA_RELEASE = $(CASABLANCA)/Release
CASA_INC = $(CASA_RELEASE)/include
CASA_LIB_DEBUG = $(CASA_RELEASE)/build.debug/Binaries
CASA_LIB_RELEASE = $(CASA_RELEASE)/build.release/Binaries

SPDLOG = ../../spdlog
SPDLOG_INC = $(SPDLOG)/include

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = -I$(CASA_INC) -I$(SPDLOG_INC)
CFLAGS = -Wall -std=c++1y -Wno-unused-local-typedefs
RESINC =
LIBDIR =
LIB = -lcpprest -lpthread
LDFLAGS =
BINARY = nodemanager

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR) -L$(CASA_LIB_DEBUG)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG =
OUTDIR_DEBUG = bin/Debug
OUT_DEBUG = $(OUTDIR_DEBUG)/$(BINARY)

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR) -L$(CASA_LIB_RELEASE)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE =
OUTDIR_RELEASE = bin/Release
OUT_RELEASE = $(OUTDIR_RELEASE)/$(BINARY)

OBJ_DEBUG = $(OBJDIR_DEBUG)/*.o
OBJ_RELEASE = $(OBJDIR_RELEASE)/$*.o

CPPS = $(notdir $(wildcard */*.cpp))
OBJS = $(CPPS:.cpp=.o)
OBJS_DEBUG = $(addprefix $(OBJDIR_DEBUG)/, $(OBJS))

all: debug release
clean: clean_debug clean_release
release: before_release out_release after_release
debug: before_debug out_debug after_debug

before_debug:
	[ -d $(OUTDIR_DEBUG) ] || mkdir -p $(OUTDIR_DEBUG)
	[ -d $(OBJDIR_DEBUG) ] || mkdir -p $(OBJDIR_DEBUG)

after_debug:
	cp scripts/* $(OUTDIR_DEBUG)/
	[ -d $(OUTDIR_DEBUG)/logs ] || mkdir $(OUTDIR_DEBUG)/logs

out_debug: before_debug EndJobArgs.o $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJS_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

clean_debug:
	rm -rf $(OUTDIR_DEBUG)
	rm -rf $(OBJDIR_DEBUG)

%.o: %.cpp
	echo $< $@
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c $< -o $(LIBDIR_DEBUG)/$@

$(OBJDIR_DEBUG)/System.o: utils/System.cpp

before_release:
	[ -d $(OUTDIR_RELEASE) ] || mkdir -p $(OUTDIR_RELEASE)
	[ -d $(OBJDIR_RELEASE) ] || mkdir -p $(OBJDIR_RELEASE)

after_release:
	cp scripts/* $(OUTDIR_RELEASE)/
	[ -d $(OUTDIR_RELEASE)/logs ] || mkdir -p $(OUTDIR_RELEASE)/logs

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/main.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.cpp -o $(OBJDIR_RELEASE)/main.o

$(OBJDIR_RELEASE)/RemoteCommunicator.o: core/RemoteCommunicator.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c core/RemoteCommunicator.cpp -o $(OBJDIR_RELEASE)/RemoteCommunicator.o

$(OBJDIR_RELEASE)/RemoteExecutor.o: core/RemoteExecutor.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c core/RemoteExecutor.cpp -o $(OBJDIR_RELEASE)/RemoteExecutor.o

$(OBJDIR_RELEASE)/JsonHelper.o: utils/JsonHelper.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c utils/JsonHelper.cpp -o $(OBJDIR_RELEASE)/JsonHelper.o

$(OBJDIR_RELEASE)/Logger.o: utils/Logger.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c utils/Logger.cpp -o $(OBJDIR_RELEASE)/Logger.o

$(OBJDIR_RELEASE)/String.o: utils/String.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c utils/String.cpp -o $(OBJDIR_RELEASE)/String.o

$(OBJDIR_RELEASE)/System.o: utils/System.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c utils/System.cpp -o $(OBJDIR_RELEASE)/System.o

$(OBJDIR_RELEASE)/ProcessStartInfo.o: arguments/ProcessStartInfo.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c arguments/ProcessStartInfo.cpp -o $(OBJDIR_RELEASE)/ProcessStartInfo.o

$(OBJDIR_RELEASE)/StartJobAndTaskArgs.o: arguments/StartJobAndTaskArgs.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c arguments/StartJobAndTaskArgs.cpp -o $(OBJDIR_RELEASE)/StartJobAndTaskArgs.o

$(OBJDIR_RELEASE)/StartTaskArgs.o: arguments/StartTaskArgs.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c arguments/StartTaskArgs.cpp -o $(OBJDIR_RELEASE)/StartTaskArgs.o

$(OBJDIR_RELEASE)/EndJobArgs.o: arguments/EndJobArgs.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c arguments/EndJobArgs.cpp -o $(OBJDIR_RELEASE)/EndJobArgs.o

$(OBJDIR_RELEASE)/EndTaskArgs.o: arguments/EndTaskArgs.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c arguments/EndTaskArgs.cpp -o $(OBJDIR_RELEASE)/EndTaskArgs.o

$(OBJDIR_RELEASE)/Process.o: core/Process.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c core/Process.cpp -o $(OBJDIR_RELEASE)/Process.o

$(OBJDIR_RELEASE)/JobTaskTable.o: core/JobTaskTable.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c core/JobTaskTable.cpp -o $(OBJDIR_RELEASE)/JobTaskTable.o

$(OBJDIR_RELEASE)/JobInfo.o: data/JobInfo.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c data/JobInfo.cpp -o $(OBJDIR_RELEASE)/JobInfo.o

$(OBJDIR_RELEASE)/TaskInfo.o: data/TaskInfo.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c data/TaskInfo.cpp -o $(OBJDIR_RELEASE)/TaskInfo.o

$(OBJDIR_RELEASE)/NodeInfo.o: data/NodeInfo.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c data/NodeInfo.cpp -o $(OBJDIR_RELEASE)/NodeInfo.o

$(OBJDIR_RELEASE)/Monitor.o: core/Monitor.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c core/Monitor.cpp -o $(OBJDIR_RELEASE)/Monitor.o

$(OBJDIR_RELEASE)/Reporter.o: core/Reporter.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c core/Reporter.cpp -o $(OBJDIR_RELEASE)/Reporter.o

$(OBJDIR_RELEASE)/ReaderLock.o: utils/ReaderLock.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c utils/ReaderLock.cpp -o $(OBJDIR_RELEASE)/ReaderLock.o

$(OBJDIR_RELEASE)/WriterLock.o: utils/WriterLock.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c utils/WriterLock.cpp -o $(OBJDIR_RELEASE)/WriterLock.o

clean_release:
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf $(OUTDIR_RELEASE)
	rm -rf $(OBJDIR_RELEASE)

EndJobArgs.o: arguments/EndJobArgs.cpp
 #arguments/EndJobArgs.h \ arguments/../utils/JsonHelper.h
EndTaskArgs.o: arguments/EndTaskArgs.cpp arguments/EndTaskArgs.h \
 arguments/../utils/JsonHelper.h
ProcessStartInfo.o: arguments/ProcessStartInfo.cpp \
 arguments/ProcessStartInfo.h arguments/../utils/JsonHelper.h
StartJobAndTaskArgs.o: arguments/StartJobAndTaskArgs.cpp \
 arguments/StartJobAndTaskArgs.h arguments/ProcessStartInfo.h \
 arguments/../utils/JsonHelper.h
StartTaskArgs.o: arguments/StartTaskArgs.cpp arguments/StartTaskArgs.h \
 arguments/ProcessStartInfo.h arguments/../utils/JsonHelper.h
JobTaskTable.o: core/JobTaskTable.cpp core/JobTaskTable.h \
 core/../data/TaskInfo.h core/../data/JobInfo.h core/../data/TaskInfo.h \
 core/../data/NodeInfo.h core/../data/JobInfo.h \
 core/../utils/WriterLock.h core/../utils/ReaderLock.h
Monitor.o: core/Monitor.cpp core/Monitor.h core/../utils/ReaderLock.h \
 core/../utils/WriterLock.h core/../utils/Logger.h core/../utils/System.h \
 core/../utils/String.h
Process.o: core/Process.cpp core/Process.h core/../utils/String.h \
 core/../utils/Logger.h core/../utils/System.h core/../utils/String.h
RemoteCommunicator.o: core/RemoteCommunicator.cpp \
 core/RemoteCommunicator.h core/../utils/Logger.h core/IRemoteExecutor.h \
 core/../arguments/StartJobAndTaskArgs.h \
 core/../arguments/ProcessStartInfo.h core/../arguments/StartTaskArgs.h \
 core/../arguments/EndJobArgs.h core/../arguments/EndTaskArgs.h \
 core/../utils/String.h core/../utils/System.h core/../utils/String.h
RemoteExecutor.o: core/RemoteExecutor.cpp core/RemoteExecutor.h \
 core/IRemoteExecutor.h core/../arguments/StartJobAndTaskArgs.h \
 core/../arguments/ProcessStartInfo.h core/../arguments/StartTaskArgs.h \
 core/../arguments/EndJobArgs.h core/../arguments/EndTaskArgs.h \
 core/JobTaskTable.h core/../data/TaskInfo.h core/../data/JobInfo.h \
 core/../data/TaskInfo.h core/../data/NodeInfo.h core/../data/JobInfo.h \
 core/Monitor.h core/Process.h core/../utils/String.h \
 core/../utils/Logger.h core/../utils/System.h core/../utils/String.h \
 core/Reporter.h core/../utils/WriterLock.h core/../utils/ReaderLock.h
Reporter.o: core/Reporter.cpp core/Reporter.h core/../utils/Logger.h
JobInfo.o: data/JobInfo.cpp data/JobInfo.h data/TaskInfo.h
NodeInfo.o: data/NodeInfo.cpp data/NodeInfo.h data/JobInfo.h \
 data/TaskInfo.h data/../utils/System.h data/../utils/String.h
TaskInfo.o: data/TaskInfo.cpp data/TaskInfo.h data/../utils/JsonHelper.h \
 data/../utils/String.h
JsonHelper.o: utils/JsonHelper.cpp utils/JsonHelper.h
Logger.o: utils/Logger.cpp utils/Logger.h
ReaderLock.o: utils/ReaderLock.cpp utils/ReaderLock.h
String.o: utils/String.cpp utils/String.h
System.o: utils/System.cpp utils/System.h utils/String.h utils/Logger.h
WriterLock.o: utils/WriterLock.cpp utils/WriterLock.h

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

