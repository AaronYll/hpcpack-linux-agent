#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#

CASABLANCA = ../../casablanca
CASA_RELEASE = $(CASABLANCA)/Release
CASA_INC = $(CASA_RELEASE)/include
CASA_LIB_DEBUG = $(CASA_RELEASE)/build.debug/Binaries
CASA_LIB_RELEASE = $(CASA_RELEASE)/build.release/Binaries

SPDLOG = ../../spdlog
SPDLOG_INC = $(SPDLOG)/include

WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = -I$(CASA_INC) -I$(SPDLOG_INC) -Iinclude -I.
CFLAGS = -Wall -std=c++1y -Wno-unused-local-typedefs
RESINC =
LIBDIR =
LIB = -lcpprest
LDFLAGS = -lpthread
BINARY = NodeManager

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR) -L$(CASA_LIB_DEBUG)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG =
OUT_DEBUG = bin/Debug/$(BINARY)

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR) -L$(CASA_LIB_RELEASE)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE =
OUT_RELEASE = bin/Release/$(BINARY)

OBJ_DEBUG = $(OBJDIR_DEBUG)/main.o $(OBJDIR_DEBUG)/RemoteCommunicator.o $(OBJDIR_DEBUG)/JsonHelper.o \
	$(OBJDIR_DEBUG)/Logger.o $(OBJDIR_DEBUG)/String.o $(OBJDIR_DEBUG)/System.o $(OBJDIR_DEBUG)/ProcessStartInfo.o \
	$(OBJDIR_DEBUG)/StartJobAndTaskArgs.o $(OBJDIR_DEBUG)/RemoteExecutor.o $(OBJDIR_DEBUG)/StartTaskArgs.o \
	$(OBJDIR_DEBUG)/EndJobArgs.o $(OBJDIR_DEBUG)/EndTaskArgs.o $(OBJDIR_DEBUG)/Process.o $(OBJDIR_DEBUG)/JobInfo.o \
	$(OBJDIR_DEBUG)/NodeInfo.o $(OBJDIR_DEBUG)/TaskInfo.o $(OBJDIR_DEBUG)/JobTaskTable.o $(OBJDIR_DEBUG)/Monitor.o \
	$(OBJDIR_DEBUG)/Reporter.o $(OBJDIR_DEBUG)/ReaderLock.o $(OBJDIR_DEBUG)/WriterLock.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/main.o $(OBJDIR_RELEASE)/RemoteCommunicator.o $(OBJDIR_RELEASE)/JsonHelper.o \
	$(OBJDIR_RELEASE)/Logger.o $(OBJDIR_RELEASE)/String.o $(OBJDIR_RELEASE)/System.o \
	$(OBJDIR_RELEASE)/ProcessStartInfo.o $(OBJDIR_RELEASE)/StartJobAndTaskArgs.o $(OBJDIR_RELEASE)/RemoteExecutor.o \
	$(OBJDIR_RELEASE)/StartTaskArgs.o $(OBJDIR_RELEASE)/EndJobArgs.o $(OBJDIR_RELEASE)/EndTaskArgs.o \
	$(OBJDIR_RELEASE)/Process.o $(OBJDIR_RELEASE)/JobInfo.o $(OBJDIR_RELEASE)/NodeInfo.o $(OBJDIR_RELEASE)/TaskInfo.o \
	$(OBJDIR_RELEASE)/JobTaskTable.o $(OBJDIR_RELEASE)/Monitor.o $(OBJDIR_RELEASE)/Reporter.o $(OBJDIR_RELEASE)/ReaderLock.o \
	$(OBJDIR_RELEASE)/WriterLock.o

all: debug release

clean: clean_debug clean_release

before_debug:
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug:

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/main.o: main.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c main.cpp -o $(OBJDIR_DEBUG)/main.o

$(OBJDIR_DEBUG)/RemoteCommunicator.o: core/RemoteCommunicator.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c core/RemoteCommunicator.cpp -o $(OBJDIR_DEBUG)/RemoteCommunicator.o

$(OBJDIR_DEBUG)/RemoteExecutor.o: core/RemoteExecutor.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c core/RemoteExecutor.cpp -o $(OBJDIR_DEBUG)/RemoteExecutor.o

$(OBJDIR_DEBUG)/JsonHelper.o: utils/JsonHelper.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c utils/JsonHelper.cpp -o $(OBJDIR_DEBUG)/JsonHelper.o

$(OBJDIR_DEBUG)/Logger.o: utils/Logger.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c utils/Logger.cpp -o $(OBJDIR_DEBUG)/Logger.o

$(OBJDIR_DEBUG)/String.o: utils/String.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c utils/String.cpp -o $(OBJDIR_DEBUG)/String.o

$(OBJDIR_DEBUG)/System.o: utils/System.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c utils/System.cpp -o $(OBJDIR_DEBUG)/System.o

$(OBJDIR_DEBUG)/ProcessStartInfo.o: arguments/ProcessStartInfo.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c arguments/ProcessStartInfo.cpp -o $(OBJDIR_DEBUG)/ProcessStartInfo.o

$(OBJDIR_DEBUG)/StartJobAndTaskArgs.o: arguments/StartJobAndTaskArgs.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c arguments/StartJobAndTaskArgs.cpp -o $(OBJDIR_DEBUG)/StartJobAndTaskArgs.o

$(OBJDIR_DEBUG)/StartTaskArgs.o: arguments/StartTaskArgs.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c arguments/StartTaskArgs.cpp -o $(OBJDIR_DEBUG)/StartTaskArgs.o

$(OBJDIR_DEBUG)/EndJobArgs.o: arguments/EndJobArgs.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c arguments/EndJobArgs.cpp -o $(OBJDIR_DEBUG)/EndJobArgs.o

$(OBJDIR_DEBUG)/EndTaskArgs.o: arguments/EndTaskArgs.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c arguments/EndTaskArgs.cpp -o $(OBJDIR_DEBUG)/EndTaskArgs.o

$(OBJDIR_DEBUG)/Process.o: core/Process.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c core/Process.cpp -o $(OBJDIR_DEBUG)/Process.o

$(OBJDIR_DEBUG)/JobTaskTable.o: core/JobTaskTable.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c core/JobTaskTable.cpp -o $(OBJDIR_DEBUG)/JobTaskTable.o

$(OBJDIR_DEBUG)/JobInfo.o: data/JobInfo.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c data/JobInfo.cpp -o $(OBJDIR_DEBUG)/JobInfo.o

$(OBJDIR_DEBUG)/TaskInfo.o: data/TaskInfo.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c data/TaskInfo.cpp -o $(OBJDIR_DEBUG)/TaskInfo.o

$(OBJDIR_DEBUG)/NodeInfo.o: data/NodeInfo.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c data/NodeInfo.cpp -o $(OBJDIR_DEBUG)/NodeInfo.o

$(OBJDIR_DEBUG)/Monitor.o: core/Monitor.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c core/Monitor.cpp -o $(OBJDIR_DEBUG)/Monitor.o

$(OBJDIR_DEBUG)/Reporter.o: core/Reporter.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c core/Reporter.cpp -o $(OBJDIR_DEBUG)/Reporter.o

$(OBJDIR_DEBUG)/ReaderLock.o: utils/ReaderLock.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c utils/ReaderLock.cpp -o $(OBJDIR_DEBUG)/ReaderLock.o

$(OBJDIR_DEBUG)/WriterLock.o: utils/WriterLock.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c utils/WriterLock.cpp -o $(OBJDIR_DEBUG)/WriterLock.o


clean_debug:
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)

before_release:
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release:

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/main.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.cpp -o $(OBJDIR_RELEASE)/main.o

$(OBJDIR_RELEASE)/RemoteCommunicator.o: core/RemoteCommunicator.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c core/RemoteCommunicator.cpp -o $(OBJDIR_RELEASE)/RemoteCommunicator.o

$(OBJDIR_RELEASE)/RemoteExecutor.o: core/RemoteExecutor.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c core/RemoteExecutor.cpp -o $(OBJDIR_RELEASE)/RemoteExecutor.o

$(OBJDIR_RELEASE)/JsonHelper.o: utils/JsonHelper.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c utils/JsonHelper.cpp -o $(OBJDIR_RELEASE)/JsonHelper.o

$(OBJDIR_RELEASE)/Logger.o: utils/Logger.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c utils/Logger.cpp -o $(OBJDIR_RELEASE)/Logger.o

$(OBJDIR_RELEASE)/String.o: utils/String.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c utils/String.cpp -o $(OBJDIR_RELEASE)/String.o

$(OBJDIR_RELEASE)/System.o: utils/System.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c utils/System.cpp -o $(OBJDIR_RELEASE)/System.o

$(OBJDIR_RELEASE)/ProcessStartInfo.o: arguments/ProcessStartInfo.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c arguments/ProcessStartInfo.cpp -o $(OBJDIR_RELEASE)/ProcessStartInfo.o

$(OBJDIR_RELEASE)/StartJobAndTaskArgs.o: arguments/StartJobAndTaskArgs.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c arguments/StartJobAndTaskArgs.cpp -o $(OBJDIR_RELEASE)/StartJobAndTaskArgs.o

$(OBJDIR_RELEASE)/StartTaskArgs.o: arguments/StartTaskArgs.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c arguments/StartTaskArgs.cpp -o $(OBJDIR_RELEASE)/StartTaskArgs.o

$(OBJDIR_RELEASE)/EndJobArgs.o: arguments/EndJobArgs.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c arguments/EndJobArgs.cpp -o $(OBJDIR_RELEASE)/EndJobArgs.o

$(OBJDIR_RELEASE)/EndTaskArgs.o: arguments/EndTaskArgs.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c arguments/EndTaskArgs.cpp -o $(OBJDIR_RELEASE)/EndTaskArgs.o

$(OBJDIR_RELEASE)/Process.o: core/Process.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c core/Process.cpp -o $(OBJDIR_RELEASE)/Process.o

$(OBJDIR_RELEASE)/JobTaskTable.o: core/JobTaskTable.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c core/JobTaskTable.cpp -o $(OBJDIR_RELEASE)/JobTaskTable.o

$(OBJDIR_RELEASE)/JobInfo.o: data/JobInfo.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c data/JobInfo.cpp -o $(OBJDIR_RELEASE)/JobInfo.o

$(OBJDIR_RELEASE)/TaskInfo.o: data/TaskInfo.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c data/TaskInfo.cpp -o $(OBJDIR_RELEASE)/TaskInfo.o

$(OBJDIR_RELEASE)/NodeInfo.o: data/NodeInfo.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c data/NodeInfo.cpp -o $(OBJDIR_RELEASE)/NodeInfo.o

$(OBJDIR_RELEASE)/Monitor.o: core/Monitor.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c core/Monitor.cpp -o $(OBJDIR_RELEASE)/Monitor.o

$(OBJDIR_RELEASE)/Reporter.o: core/Reporter.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c core/Reporter.cpp -o $(OBJDIR_RELEASE)/Reporter.o

$(OBJDIR_RELEASE)/ReaderLock.o: utils/ReaderLock.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c utils/ReaderLock.cpp -o $(OBJDIR_RELEASE)/ReaderLock.o

$(OBJDIR_RELEASE)/WriterLock.o: utils/WriterLock.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c utils/WriterLock.cpp -o $(OBJDIR_RELEASE)/WriterLock.o

clean_release:
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

